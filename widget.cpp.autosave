#include "widget.h"
#include "ui_widget.h"
#include "QDebug"

double U(double x) {
    return sin(2 * x);
}

Widget::Widget(QWidget *parent) :
    QWidget(parent),
    ui(new Ui::Widget)
{
    ui->setupUi(this);
    ui->plot->xAxis->setLabel("x");
    ui->plot->yAxis->setLabel("U");
    // set axes ranges, so we see all data:
    N = 3;
    M = 1;
    a = 0;
    b = 10;
    plotDelta = .001;
    ui->plot->addGraph();
    ui->plot->addGraph();
    plotMain();
}

Widget::~Widget()
{
    delete ui;
}

void Widget::plotMain() {
    ui->plot->xAxis->setRange(a, b);
    ui->plot->yAxis->setRange(-1, 1);
    plotAnalyze();
    plotResult();
    ui->plot->replot();
}

void Widget::plotAnalyze() {
    int plotN = int((b - a) / plotDelta) + 1;
    QVector<double> plotX(plotN);
    QVector<double> plotU(plotN);
    int i = 0;
    for (double x = a; x <= b; x += plotDelta) {
        plotX[i] = x;
        plotU[i] = U(x);
        i++;
    }

    ui->plot->graph(0)->setData(plotX, plotU);
}

void Widget::plotResult() {
    int plotN = int((b - a) / plotDelta) + 1;
    QVector<double> plotX(plotN);
    QVector<double> plotU(plotN);
    int i = 0;
    double x[10000];
    double testU[10000];
    double delta = (b - a) / (N - 1);
    x[0] = a; testU[0] = U(a);
    x[N - 1] = b; testU[N - 1] = U(b);
    for (int i = 1; i < N - 1; i++) {
        x[i] = i * delta;
        testU[i] = U(x[i]);
    }

    qDebug() << "Start create " << M;
    TInitU u(N, x, testU, M, 1e-3);

    for (double x = a; x <= b; x += plotDelta) {
        plotX[i] = x;
        double tmp = u.get(x);
        plotU[i] = tmp;
        i++;
    }

    ui->plot->graph(1)->setData(plotX, plotU);
}



void Widget::on_spinBox_valueChanged(int arg1)
{
    N = arg1;
    plotMain();
}

void Widget::on_spinBox_2_valueChanged(int arg1)
{
    M = arg1;
    plotMain();
}

void Widget::on_doubleSpinBox_valueChanged(double arg1)
{
   plotDelta = arg1;
   plotMain();
}
